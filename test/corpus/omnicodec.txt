================================================================================
Real Cabal file - omnicodec
================================================================================

cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.31.1.
--
-- see: https://github.com/sol/hpack
--
-- hash: ae6d7c6f78d12539cc6fe2febc529b9aecc04f2c70f1f2a1e869819dd375d535

name:          omnicodec
version:       0.8
synopsis:      Data encoding and decoding command line utilities
description:
  Two simple command line tools built on sandi (http://hackage.haskell.org/package/sandi).

category:      Codec
maintainer:    Magnus Therning <magnus@therning.org>
license:       OtherLicense
license-file:  COPYING
build-type:    Simple

source-repository head
  type:     git
  location: https://github.com/magthe/omnicodec.git

executable odec
  main-is:          odec.hs
  other-modules:    Paths_omnicodec
  hs-source-dirs:   src
  ghc-options:      -Wall
  build-depends:
      base          <5
    , bytestring
    , cmdargs
    , conduit
    , sandi
    , transformers

  default-language: Haskell2010

executable oenc
  main-is:          oenc.hs
  other-modules:    Paths_omnicodec
  hs-source-dirs:   src
  ghc-options:      -Wall
  build-depends:
      base          <5
    , bytestring
    , cmdargs
    , conduit
    , sandi
    , transformers

  default-language: Haskell2010

--------------------------------------------------------------------------------

(cabal
  (cabal_version
    (spec_version))
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (properties
    (field
      (field_name)
      (field_value))
    (field
      (field_name)
      (field_value))
    (field
      (field_name)
      (field_value))
    (field
      (field_name)
      (field_value))
    (field
      (field_name)
      (field_value))
    (field
      (field_name)
      (field_value))
    (field
      (field_name)
      (field_value))
    (field
      (field_name)
      (field_value))
    (field
      (field_name)
      (field_value)))
  (sections
    (source_repository
      (section_name)
      (property_block
        (indent)
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value))
        (dedent)))
    (executable
      (section_name)
      (property_or_conditional_block
        (indent)
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value)
          (indent)
          (field_value)
          (field_value)
          (field_value)
          (field_value)
          (field_value)
          (dedent))
        (field
          (field_name)
          (field_value))
        (dedent)))
    (executable
      (section_name)
      (property_or_conditional_block
        (indent)
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value))
        (field
          (field_name)
          (field_value)
          (indent)
          (field_value)
          (field_value)
          (field_value)
          (field_value)
          (field_value)
          (dedent))
        (field
          (field_name)
          (field_value))
        (dedent)))))
